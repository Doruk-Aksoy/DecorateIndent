actor GrabBusterBoss : BaseMM8BDMWep_CBM {
	tag "$TAGC_VB"
	dropitem "GrabBusterWepCDropped"
	Weapon.AmmoUse 0
	Weapon.AmmoGive 28
	Obituary "$OB_MERCURYGRAB"
	weapon.ammotype "MercuryClassAmmo"
	States {
		Spawn:
			C_0V B 1
		loop
		Ready:
			MRCH A 0 ACS_ExecuteAlways(998, 0, DYE_MERCURY)
			MRCH A 0 A_GunFlash
		goto Ready1
		Ready1:
			MRCH A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "SwitchBlobOn")
			MRCH A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOn")
			MRCH A 1 A_WeaponReady
			MRCH A 0 A_JumpIfInventory("PowerRage_ST", 1, 4)
			MRCH A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "SwitchBlobOn")
			MRCH A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOn")
			MRCH A 1 A_WeaponReady
			MRCH A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "SwitchBlobOn")
			MRCH A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOn")
			MRCH A 1 A_WeaponReady
			MRCH A 0 A_JumpIfInventory("PowerRage_ST", 1, 4)
			MRCH A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "SwitchBlobOn")
			MRCH A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOn")
			MRCH A 1 A_WeaponReady
			MRCH A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "SwitchBlobOn")
			MRCH A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOn")
			MRCH A 1 A_WeaponReady
			MRCH A 0 A_JumpIfInventory("PowerRage_ST", 1, 4)
			MRCH A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "SwitchBlobOn")
			MRCH A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOn")
			MRCH A 1 A_WeaponReady
			MRCH A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "SwitchBlobOn")
			MRCH A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOn")
			MRCH A 1 A_WeaponReady
			MRCH A 0 A_JumpIfInventory("PowerRage_ST", 1, 4)
			MRCH A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "SwitchBlobOn")
			MRCH A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOn")
			MRCH A 1 A_WeaponReady
			MRCH A 0 A_GiveInventory("MercuryBlobFormAmmo", 8)
		loop
		ReadyBlob:
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "SwitchBlobOff")
			TNT1 A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOff")
			TNT1 A 0 A_JumpIfInventory("MercuryClassAmmo", 4, "ReadyBlob2")
			TNT1 A 1 A_WeaponReady(14)
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "SwitchBlobOff")
			TNT1 A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOff")
			TNT1 A 1 A_WeaponReady(14)
			TNT1 A 0 A_TakeInventory("MercuryBlobFormAmmo", 2)
			TNT1 A 0 A_JumpIfInventory("MercuryBlobFormAmmo", 1, "ReadyBlob")
		Goto SwitchBlobOff
		ReadyBlob2:
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "SwitchBlobOff")
			TNT1 A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOff")
			TNT1 A 1 A_WeaponReady(2)
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "SwitchBlobOff")
			TNT1 A 0 A_JumpIfInventory("Merc_BlobSwap_F", 1, "SwitchBlobOff")
			TNT1 A 1 A_WeaponReady(2)
			TNT1 A 0 A_TakeInventory("MercuryBlobFormAmmo", 2)
			TNT1 A 0 A_JumpIfInventory("MercuryBlobFormAmmo", 1, "ReadyBlob2")
		Goto SwitchBlobOff
		SwitchBlobOn:
			MRCH B 0 A_WeaponReady(14)
			MRCH B 0 A_PlaySoundEx("weapon / PirateBubble", "Weapon")
			MRCH B 1 A_GiveInventory("MercuryBlobSwap_P1", 1)
			MRCH E 0 A_JumpIf(1, 1)
			MRCH E 0 A_GiveInventory("Merc_BlobOn_F", 1)
			MRCH E 0 A_TakeInventory("Merc_BlobOff_F", 99)
			MRCH E 0 A_TakeInventory("Merc_BlobSwap_F", 99)
			MRCH E 1 A_JumpIfInventory("PowerRage_ST", 1, 1)
			MRCH EF 2 A_WeaponReady(14)
			MRCH G 1 A_GiveInventory("MercuryAmmoSync_P0", 1)
			MRCH H 1 A_JumpIfInventory("PowerRage_ST", 1, 1)
			MRCH H 1 Offset(-4, 51)A_GiveInventory("SnakeClimbing", 1)
			TNT1 A 0 ACS_ExecuteAlways(CORE_ACS_191, 0, APROP_Speed, 140, 100)
			TNT1 A 0 ACS_ExecuteAlways(CORE_ACS_191, 0, APROP_JumpZ, 7, 1)
			TNT1 A 0 A_TakeInventory("Merc_BlobSwap_F", 99)
			TNT1 A 0 A_TakeInventory("VivifyDelay6", 99)
			TNT1 A 0 A_TakeInventory("UnSolid", 1)
			TNT1 A 0 A_ChangeFlag("SOLID", 0)
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "ReadyBlob")
		goto ReadyBlob
		SwitchBlobOff:
			MRCH B 0 A_WeaponReady(14)
			MRCH I 0 A_PlaySoundEx("weapon / PirateBubble", "Weapon")
			MRCH I 0 A_GiveInventory("MercuryBlobSwap_P2", 1)
			MRCH I 0 A_SpawnItemEx("Resolidifier")
			MRCH H 1 Offset(-4, 51)A_JumpIfInventory("PowerRage_ST", 1, 1)
			MRCH H 0 A_JumpIf(1, 1)
			MRCH H 0 A_GiveInventory("Merc_BlobOff_F", 1)
			MRCH H 0 A_TakeInventory("Merc_BlobOn_F", 99)
			MRCH H 0 A_TakeInventory("SnakeClimbing", 99)
			MRCH H 0 A_TakeInventory("Merc_BlobSwap_F", 99)
			MRCH H 1 A_WeaponReady(14)
			MRCH G 1 A_JumpIfInventory("PowerRage_ST", 1, 1)
			MRCH F 1 A_GiveInventory("MercuryAmmoSync_P0", 1)
			MRCH E 1 A_JumpIfInventory("PowerRage_ST", 1, 1)
			MRCH B 1 A_WeaponReady(14)
			MRCH A 0 ACS_ExecuteAlways(CORE_ACS_191, 0, APROP_Speed, 1, 1)
			MRCH A 0 ACS_ExecuteAlways(CORE_ACS_191, 0, APROP_JumpZ, 10, 1)
			MRCH A 0 A_TakeInventory("Merc_BlobSwap_F", 99)
			MRCH A 0 A_TakeInventory("VivifyDelay5", 99)
			MRCH A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "Ready1")
		goto Ready1
		Deselect:
			TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
			MRCH A 1 A_Lower
		Loop
		Select:
			TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
			MRCH A 1 A_Raise
		Loop
		Fire:
			MRCH B 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "BlobFire")
		goto Fire2
		Fire2:
			MRCH B 0 A_GiveInventory("MercNoDesyncM")
			MRCH B 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "Fire2XX")
			MRCH B 0 A_PlaySoundEx("weapon / grabbuster", "Weapon")
			MRCH B 2
			MRCH B 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "Fire2X")
			MRCH B 0 A_GiveInventory("MercuryMain_CI", 1)
			MRCH CCBAAA 3
			MRCH A 2
			MRCH A 1 A_GiveInventory("MercuryBlobFormAmmo", 8)
			MRCH A 0 A_TakeInventory("Merc_BlobSwap_F", 99)
		goto Ready1
		Fire2XX:
			MRCH B 0 //A_Log("NOT SO FAST 0 Fire2")
		goto SwitchBlobOn
		Fire2X:
			MRCH B 0 //A_Log("NOT SO FAST 2 Fire2")
		goto SwitchBlobOn
		BlobFire:
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "BlobFireXX")
			TNT1 A 0 A_PlaySoundEx("weapon / GameBoyFire", "Weapon")
			TNT1 A 0 A_GiveInventory("MercNoDesyncBM")
			TNT1 A 2
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "BlobFireX")
			TNT1 A 0 A_TakeInventory("MercuryClassAmmo", 4)
			TNT1 A 0 A_GiveInventory("MercuryMain2_CI", 1)
			TNT1 AAAAAAAA 2 A_TakeInventory("MercuryBlobFormAmmo", 2)
			TNT1 A 0 A_JumpIfInventory("MercuryBlobFormAmmo", 1, "ReadyBlob")
		Goto SwitchBlobOff
		BlobFireXX:
			MRCH B 0 //A_Log("NOT SO FAST 0 BlobFire")
		goto SwitchBlobOff
		BlobFireX:
			MRCH B 0 //A_Log("NOT SO FAST 2 BlobFire")
		goto SwitchBlobOff
		Altfire:
			MRCH A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "BlobAlt")
		goto Altfire2
		Altfire2:
			MRCH A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "Altfire2XXX")
			MRCH A 0 A_PlaySoundEx("weapon / SlashClaw", "Weapon")
			MRCH A 0 A_GiveInventory("MercurySnatchDamager_P", 1)
			MRCH A 0 A_GiveInventory("MercNoDesyncA", 1)
			MRCH I 0 A_SpawnItemEx("MercurySnatch", cos(pitch) * 38, 0, 14 - (sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 8)
			MRCH I 1 A_SpawnItemEx("MercurySnatchFX", cos(pitch) * 38, 15, 36 - (sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 9)
			MRCH I 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "Altfire2XX")
			MRCH I 0 A_SpawnItemEx("MercurySnatch", cos(pitch) * 38, 0, 14 - (sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 8)
			MRCH I 1 Offset(-19, 27)A_SpawnItemEx("MercurySnatchFX", cos(pitch) * 38, 10, 35-(sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 9)
			MRCH I 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "Altfire2X")
			MRCH J 0 A_SpawnItemEx("MercurySnatch", cos(pitch) * 38, 0, 14 - (sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 8)
			MRCH J 1 Offset(1, 31)A_SpawnItemEx("MercurySnatchFX", cos(pitch) * 38, 8, 34 - (sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 9)
			MRCH J 0 A_SpawnItemEx("MercurySnatch", cos(pitch) * 38, 0, 14 - (sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 8)
			MRCH J 1 Offset(-19, 34)A_SpawnItemEx("MercurySnatchFX", cos(pitch) * 38, 3, 33-(sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 9)
			MRCH K 0 A_SpawnItemEx("MercurySnatch", cos(pitch) * 38, 0, 14 - (sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 8)
			MRCH K 1 Offset(1, 31)A_SpawnItemEx("MercurySnatchFX", cos(pitch) * 38, -5, 32-(sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 9)
			MRCH K 0 A_SpawnItemEx("MercurySnatch", cos(pitch) * 38, 0, 14 - (sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 8)
			MRCH K 1 Offset(-46, 37)A_SpawnItemEx("MercurySnatchFX", cos(pitch) * 38, -12, 31-(sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 9)
			MRCH L 0 A_SpawnItemEx("MercurySnatch", cos(pitch) * 38, 0, 14 - (sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 8)
			MRCH L 1 Offset(1, 31)
			MRCH M 1 Offset(1, 31)A_SpawnItemEx("MercurySnatch", cos(pitch) * 38, 0, 14 - (sin(pitch) * 32), cos(pitch) * velx, vely, 0, 0, 8)
			MRCH M 1 Offset(-11, 53)
			MRCH M 1 Offset(-23, 76)
			TNT1 A 10
			MRCH B 2 Offset(-2, 57)
			MRCH B 4 A_WeaponReady(14)
			MRCH A 2
			MRCH A 1 A_GiveInventory("MercuryAmmoSync_P8", 1)
			MRCH A 0 A_TakeInventory("Merc_BlobSwap_F", 99)
		goto Ready1
		Altfire2XXX:
			MRCH I 0 //A_Log("NOT SO FAST 0 Altfire2")
		goto SwitchBlobOn
		Altfire2XX:
			MRCH I 0 //A_Log("NOT SO FAST 1 Altfire2")
		goto SwitchBlobOn
		Altfire2X:
			MRCH I 0 //A_Log("NOT SO FAST 2 Altfire2")
		goto SwitchBlobOn
		BlobAltXXX:
			TNT1 A 0 //A_Log("NOT SO FAST 0 BlobAlt")
		goto SwitchBlobOff
		BlobAltXX:
			TNT1 A 0 //A_Log("NOT SO FAST 1 BlobAlt")
		goto SwitchBlobOff
		BlobAltX:
			TNT1 A 0 //A_Log("NOT SO FAST 2 BlobAlt")
		goto SwitchBlobOff
		BlobAlt:
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "BlobAltXXX")
			TNT1 A 0 A_PlaySoundEx("weapon / WoodLeap", "Weapon")
			TNT1 A 0 A_ChangeVelocity(cos(pitch) * 36, 0, -sin(pitch) * 20 + 4, 3)
			TNT1 A 0 A_GiveInventory("MercuryAltBlobSync_P", 1)
			TNT1 A 1 A_SpawnItemEX("MercuryCollider", 0, 0, -8, momx, momy, momz, 0, 8, 0)
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "BlobAltXX")
			TNT1 A 0 A_JumpIf(z-floorz==0, "BlobAltEnd")
			TNT1 A 0 A_JumpIfInventory("MercuryLanded", 1, "BlobAltH")
			TNT1 A 1 A_SpawnItemEX("MercuryCollider", 0, 0, -8, momx, momy, momz, 0, 8, 0)
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "BlobAltX")
			TNT1 A 0 A_JumpIf(z-floorz==0, "BlobAltEnd1")
			TNT1 A 0 A_JumpIfInventory("MercuryLanded", 1, "BlobAltH")
			TNT1 A 1 A_SpawnItemEX("MercuryCollider", 0, 0, -8, momx, momy, momz, 0, 8, 0)
			TNT1 A 0 A_JumpIf(z-floorz==0, "BlobAltEnd1")
			TNT1 A 0 A_JumpIfInventory("MercuryLanded", 1, "BlobAltH")
			TNT1 A 1 A_SpawnItemEX("MercuryCollider", 0, 0, -8, momx, momy, momz, 0, 8, 0)
			TNT1 A 0 A_JumpIf(z-floorz==0, "BlobAltEnd2")
			TNT1 A 0 A_JumpIfInventory("MercuryLanded", 1, "BlobAltH")
			TNT1 A 1 A_SpawnItemEX("MercuryCollider", 0, 0, -8, momx, momy, momz, 0, 8, 0)
			TNT1 A 0 A_JumpIf(z-floorz==0, "BlobAltEnd2")
			TNT1 A 0 A_JumpIfInventory("MercuryLanded", 1, "BlobAltH")
			TNT1 A 1 A_SpawnItemEX("MercuryCollider", 0, 0, -8, momx, momy, momz, 0, 8, 0)
			TNT1 A 0 A_JumpIf(z-floorz==0, "BlobAltEnd3")
			TNT1 A 0 A_JumpIfInventory("MercuryLanded", 1, "BlobAltH")
			TNT1 A 1 A_SpawnItemEX("MercuryCollider", 0, 0, -8, momx, momy, momz, 0, 8, 0)
			TNT1 A 0 A_JumpIf(z-floorz==0, "BlobAltEnd3")
			TNT1 A 0 A_JumpIfInventory("MercuryLanded", 1, "BlobAltH")
			TNT1 A 1 A_SpawnItemEX("MercuryCollider", 0, 0, -8, momx, momy, momz, 0, 8, 0)
			TNT1 A 0 A_GiveInventory("SnakeClimbing")
			//TNT1 A 0 A_JumpIf(momz==0, "BlobAltEnd4")
		goto BlobAltLoop
		BlobAltLoop:
			TNT1 A 0 A_JumpIf(z-floorz==0, "BlobAltH")
			TNT1 A 0 A_JumpIf(momz==0, "BlobAlt
		LoopZ")
		TNT1 A 0 //A_JumpIfInventory("RyuRecoverFlag", 110, "Recovered")
		TNT1 A 0 A_JumpIfInventory("MercuryLanded", 1, "BlobAltH")
		TNT1 A 0 A_JumpIfInventory("SnakeOnWall", 1, "BlobAltEnd4")
		TNT1 A 0 A_SpawnItemEX("MercuryCollider", 0, 0, -8, momx, momy, momz, 0, 8, 0)
		TNT1 A 1 //A_GiveInventory("RyuRecoverFlag", 1)
		loop
		BlobAltLoopZ:
			TNT1 A 0 A_JumpIfInventory("MercuryLanded", 1, "BlobAltH")
			TNT1 A 0 A_JumpIfInventory("SnakeOnWall", 1, "BlobAltEnd4")
			TNT1 A 0 A_SpawnItemEX("MercuryCollider", 0, 0, -8, momx, momy, momz, 0, 8, 0)
			TNT1 A 1
			TNT1 A 0 A_JumpIf(z-floorz==0, "BlobAltH")
			TNT1 A 0 A_JumpIf(momz==0, "BlobAltH")
		goto BlobAltLoop+2
		BlobAltH:
			TNT1 A 0 A_PlaySoundEx("classes / burstpop", "Weapon")
			TNT1 A 0 A_GiveInventory("MercuryAlt_CI", 1)
			TNT1 A 2 A_ScaleVelocity(0.5)//AAA 1 0.25
		goto BlobAltEnd+4
		BlobAltEnd1:
		goto BlobAltEnd+1
		BlobAltEnd2:
		goto BlobAltEnd+2
		BlobAltEnd3:
		goto BlobAltEnd+3
		BlobAltEnd4:
		goto BlobAltEnd+4
		BlobAltEnd:
			TNT1 AAAA 2
			TNT1 A 15 A_GiveInventory("SnakeClimbing")
			TNT1 A 0 A_JumpIfInventory("MercuryBlobFormAmmo", 1, "ReadyBlob")
		Goto SwitchBlobOff
		Flash:
			TNT1 A 0 A_JumpIfInventory("IsDead", 1, "NoFlash")
			TNT1 A 1 A_GiveInventory("MercuryFlashClimb_P", 1)
		loop
	}
}

actor MercNoDesyncM : Powerup {
	powerup.duration 23
	+INVENTORY.ADDITIVETIME
}

actor MercNoDesyncBM : Powerup {
	powerup.duration 18
	+INVENTORY.ADDITIVETIME
}

actor MercNoDesyncA : Powerup {
	powerup.duration 29
	+INVENTORY.ADDITIVETIME
}

actor MercNoDesyncItem : Powerup {
	powerup.duration 5
	+INVENTORY.ADDITIVETIME
}

actor MercuryClassAmmo : Ammo {
	inventory.amount 1
	inventory.maxamount 28
	+INVENTORY.IGNORESKILL
}

actor MercuryBlobFormAmmo : Ammo {
	inventory.amount 1
	inventory.maxamount 280
	+INVENTORY.IGNORESKILL
}

actor Merc_BlobOn_F : OnceC { }

actor Merc_BlobOff_F : OnceC { }

actor Merc_BlobSwap_F : OnceC { }

actor MercuryLanded : Powerup {
	powerup.duration 5
}

actor PowerMercurySlowSpeed : PowerSpeed {
	powerup.duration 3
	Speed 0.8
	+POWERSPEED.NOTRAIL
}

actor MercuryBlobItem : CustomInventory {
	inventory.amount 1
	inventory.maxamount 1
	inventory.icon "MercIcon"
	scale 2.0
	inventory.pickupmessage "Power up! Power to... melt!"
	+INVBAR
	states {
		Spawn:
			MRCH Z 1
		loop
		Use:
			TNT1 A 0 A_JumpIfInventory("MercNoDesyncItem", 1, "No")
			TNT1 A 0 A_JumpIfInventory("MercNoDesyncM", 1, "No")
			TNT1 A 0 A_JumpIfInventory("MercNoDesyncBM", 1, "No")
			TNT1 A 0 A_JumpIfInventory("MercNoDesyncA", 1, "No")
			TNT1 A 0 A_JumpIfInventory("VivifyDelay6", 1, "No")
			TNT1 A 0 A_JumpIfInventory("VivifyDelay5", 1, "No")
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOn_F", 1, "Use2")
			TNT1 A 0 A_JumpIfInventory("Merc_BlobOff_F", 1, "Use1")
		fail
		Use1:
			TNT1 A 0 A_JumpIfInventory("MercuryBlobFormAmmo", 60, "Use2")
		fail
		Use2:
			TNT1 A 0 A_GiveInventory("Merc_BlobSwap_F", 1)
			TNT1 A 0 A_GiveInventory("MercNoDesyncItem", 1)
		fail
		No:
		TNT1 A 0
		fail
	}
}

actor MercuryFlashClimb_P : CustomInventory {
	states {
		Pickup:
			TNT1 A 0 A_JumpIfInventory("SnakeClimbing", 1, "PickupStart")
		goto PickupClimb
		PickupStart:
			TNT1 A 0 A_SpawnItemEx("MercuryClimbCheck", 0, 0, 16, 0, 0, 34)
		goto PickupClimb
		PickupClimb:
			TNT1 A 0 A_JumpIfInventory("SnakeOnWall", 1, "PickupClimbYes")
			TNT1 A 0 SetPlayerProperty(0, 0, 3)
			TNT1 A 0 A_TakeInventory("PowerMercurySlowSpeed", 1)
		stop
		PickupClimbYes:
			TNT1 A 0 A_JumpIfInventory("FlightDisableFlag", 1, 2)
			TNT1 A 0 SetPlayerProperty(0, 1, 3)
			TNT1 A 0 A_GiveInventory("PowerMercurySlowSpeed", 1)
		stop
	}
}

actor MercuryAmmoSync_P0 : CustomInventory {
	states {
		Pickup:
			TNT1 A 0 A_GiveInventory("MercuryBlobFormAmmo", 1)
			TNT1 A 0 A_TakeInventory("MercuryBlobFormAmmo", 1)
		stop
	}
}

actor MercuryAmmoSync_P8 : CustomInventory {
	states {
		Pickup:
			TNT1 A 0 A_GiveInventory("MercuryBlobFormAmmo", 16)
			TNT1 A 0 A_TakeInventory("MercuryBlobFormAmmo", 8)
		stop
	}
}

actor MercuryBlobSwap_P1 : CustomInventory {
	states {
		Pickup:
			TNT1 A 0 A_GiveInventory("VivifyDelay6", 1)
			TNT1 A 0 A_GiveInventory("Merc_BlobOn_F", 1)
			TNT1 A 0 A_TakeInventory("Merc_BlobOff_F", 99)
			TNT1 A 0 A_TakeInventory("MercuryBlobFormAmmo", 20)
			TNT1 A 0 A_TakeInventory("Merc_BlobSwap_F", 99)
			TNT1 A 0
		stop
	}
}

actor MercuryBlobSwap_P2 : CustomInventory {
	states {
		Pickup:
			TNT1 A 0 A_GiveInventory("VivifyDelay5", 1)
			TNT1 A 0 A_GiveInventory("Merc_BlobOff_F", 1)
			TNT1 A 0 A_TakeInventory("Merc_BlobOn_F", 99)
			TNT1 A 0 A_TakeInventory("SnakeClimbing", 99)
			TNT1 A 0 A_TakeInventory("Merc_BlobSwap_F", 99)
		stop
	}
}

actor MercuryAltBlobSync_P : CustomInventory {
	states {
		Pickup:
			TNT1 A 0 A_TakeInventory("MercuryClassAmmo", 4)
			TNT1 A 0 A_TakeInventory("SnakeClimbing", 99)
			TNT1 A 0 A_SpawnItemEx("MercuryBlob1", 0, 0, 0, 0, 0, 0, 0, 1)
		stop
	}
}

actor MercuryClimbCheck : SnakeClimbCheck {
	States {
		Death:
			TNT1 A 0
			TNT1 A 0 A_GiveToTarget("SnakeOnWall", 1)
			TNT1 A 1
		stop
	}
}

actor MercuryCollider {
	PROJECTILE
	Damagetype "ClassPain"
	Obituary "$OB_MERCURYSLAM"
	+NOGRAVITY
	+SKYEXPLODE
	+DONTSPLASH
	+DONTBLAST
	+THRUGHOST
	+DONTREFLECT
	damage (0)
	Radius 62
	Height 72
	States {
		Spawn:
			TNT1 A 0
			TNT1 A 1
			TNT1 A 0
		stop
		XDeath:
			TNT1 A 0 A_GiveToTarget("MercuryLanded", 1)
			TNT1 A 0
		Stop
		Death:
			TNT1 A 1
		Stop
	}
}

actor MercurySnatchDamager_P : CustomInventory {
	States {
		Pickup:
			TNT1 A 0
		goto Pickup2
		Pickup2:
			TNT1 A 0 A_FireCustomMissile("MercurySnatchDamager", 0, 0, 0, 0)
		stop
	}
}

actor MercurySnatchDamager {
	PROJECTILE
	damagetype "GrabBuster"
	obituary "$OB_MERCURYSWIPE"
	+THRUSPECIES
	+DONTREFLECT
	+DONTBLAST
	species "Mercury"
	damage (5)
	radius 14
	height 14
	states {
		Spawn:
			TNT1 A 0
			TNT1 AAAAAAA 1 A_Warp(2, 28, 0, 16, 0, 72)
		stop
	}
}

//no memes allowed

actor MercurySnatchDamager256 : MercurySnatchDamager {
	obituary "$OB_MERCURYSWIPEX"
	damage (200)
}

actor MercurySnatchFX {
	PROJECTILE
	+CLIENTSIDEONLY
	+NOINTERACTION
	+FORCEXYBILLBOARD
	height 2
	radius 2
	scale 1.0
	states {
		Spawn:
			MRCR TSR 1 A_FadeOut(0.25)
		stop
	}
}

actor MercurySnatch {
	var int user_USER;
	-SOLID
	+NOGRAVITY
	+DONTDRAIN
	species "Mercury"
	health 1
	radius 28
	height 32
	States {
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_SetUserVar("user_USER", ACS_ExecuteWithResult(257, 0))
			TNT1 A 0 A_ChangeFlag("SHOOTABLE", 1)
			TNT1 A 0 A_ChangeFlag("DONTRIP", 1)
			TNT1 A 1
			TNT1 A 1
		stop
		Death:
			TNT1 A 0
			TNT1 A 0 ACS_ExecuteAlways(213, 0, 3, user_USER, ACS_ExecuteWithResult(147, 0))
			TNT1 A 1 A_SpawnItemEx("MercurySnatchBlockD", 0, 0, 0, 0, 0, 0, 0, 32)
		stop
	}
}

actor MercurySnatchBlockD {
	PROJECTILE
	damagetype "GrabBuster"
	obituary "$OB_MERCURYSWIPE"
	+DONTBLAST
	+DONTREFLECT
	+DONTDRAIN
	+NOGRAVITY
	-NOBLOCKMAP
	+SHOOTABLE
	+INVULNERABLE
	+NORADIUSDMG
	+DONTRIP
	+NOBLOOD
	+THRUSPECIES
	species "Mercury"
	Damage (0)
	radius 28
	height 32
	speed 0
	States {
		Spawn:
			TNT1 A 1
		stop
	}
}

actor MercurySnatch22 {
	var int user_pTID;
	var int user_eTID;
	PROJECTILE
	damagetype "GrabBuster"
	obituary "$OB_MERCURYSWIPE"
	-NOBLOCKMAP
	-SOLID
	-SHOOTABLE
	+DONTRIP
	+DONTBLAST
	+DONTDRAIN
	+NORADIUSDMG
	+DONTREFLECT
	+THRUSPECIES
	+QUICKTORETALIATE
	painchance 256
	species "Mercury"
	renderstyle none
	health 9999
	mass 999999999
	damage (0)
	height 32
	radius 28
	states {
		Spawn:
			TNT1 A 0
			TNT1 A 1 A_SetUserVar("user_pTID", ACS_ExecuteWithResult(143, 0))
			TNT1 A 0 //A_LogInt(1000 + user_pTID)
			TNT1 A 0 A_RearrangePointers(AAPTR_NULL, 0, AAPTR_TARGET)
			TNT1 A 2 A_ChangeFlag("SHOOTABLE", 1)
		stop
		Pain:
			TNT1 A 1 A_ChangeFlag("NOINTERACTION", 1)
			TNT1 A 0 A_SetUserVar("user_eTID", ACS_ExecuteWithResult(143, 0))
			TNT1 A 0 //A_LogInt(2000 + user_eTID)
			TNT1 A 0 A_RearrangePointers(AAPTR_TRACER, 0, AAPTR_TARGET)
			TNT1 A 0 A_JumpIf(user_eTID==-1, "Give")
			TNT1 A 0 A_JumpIf(user_pTID!=user_eTID, "Give")
		stop
		Give:
			TNT1 A 1 //A_SpawnItemEx("MercurySnatchGiver")
			TNT1 A 1 A_GiveInventory("MercurySnatchPickup", 1, AAPTR_TARGET)
		stop
	}
}

actor MercurySnatchSuccess : Powerup {
	powerup.duration 15
}

actor MercurySnatchPickup : CustomInventory {
	states {
		Pickup:
			TNT1 A 0 A_JumpIfInventory("MercurySnatchSuccess", 1, "No")
			TNT1 A 0 A_GiveInventory("MercurySnatchSuccess", 1)
			TNT1 A 0 A_PlaySoundEx("item / JunkPick", "Body")
			TNT1 A 0 A_GiveInventory("MercuryClassAmmo", 4)
		stop
		No:
		TNT1 A 0
		stop
	}
}

actor Merc_GrabBuster {
	Translation "192 : 192=104 : 104", "198 : 198=110 : 110"
	PROJECTILE
	damagetype "GrabBusterB"
	Obituary "$OB_MERCURYGRAB"
	+DONTREFLECT
	+HITTRACER
	+BOUNCEONWALLS
	bouncecount 3
	Damage (10)
	radius 9
	height 9
	Speed 44
	scale 2.5
	States {
		Spawn:
			TNT1 A 1
			MRCR AC 1
			MRCR A 0 A_ChangeFlag("BOUNCEONWALLS", 0)
			MRCR ABCD 3
		Goto Spawn+3
		Crash:
		XDeath:
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("cbm_istracerenemy"), "Give")
		Goto Death
		Give:
			MRCR A 0 A_FaceTarget
			MRCR A 0 A_SpawnItemEx("Merc_GrabBusterChase", 0, 0, 0, 30, 0, 30, random(150, 210), 1)
			Death:
			MRCR AC 1 A_FadeOut(0.1)
		loop
	}
}

actor Merc_GrabBusterChase {
	PROJECTILE
	+SEEKERMISSILE
	+DONTBLAST
	+DONTREFLECT
	+NOINTERACTION
	renderstyle translucent
	alpha 0.8
	reactiontime 135
	speed 50
	scale 1.5
	states {
		Spawn:
			MRCR U 0
			MRCR U 0 A_RearrangePointers(0, 0, AAPTR_TARGET)
			MRCR U 0 A_SetPitch(30)//momz
		goto SpawnSlow+2
		SpawnSlow:
			MRCR U 0 A_JumpIf(Args[4]>=9, "SpawnSpeedStart")
			MRCR U 0 A_JumpIfCloser(64, "Death")
			MRCR U 0 A_JumpIf(ACS_ExecuteWithResult(C_CHECK_TARGET_OOC)==0, "No")
			MRCR U 0 A_SetArg(4, Args[4]+1)
			MRCR U 0 A_SpawnItemEx("Merc_GrabBusterChaseFX", 0, 0, 0, 0, 0, 0, 0, 1)
			MRCR U 0 A_FaceTracer(5, 2)
			MRCR U 1 A_ChangeVelocity(30 - 3 * Args[4], 0, sin(pitch) * (30 - 3 * Args[4]), 3)//momz * (1 - Args[4] * 0.05), 3)
			MRCR V 0 A_FaceTracer(5, 2)
			MRCR V 1 A_ChangeVelocity(30 - 3 * Args[4], 0, sin(pitch) * (30 - 3 * Args[4]), 3)
		loop
		SpawnSpeedStart:
			MRCR U 0 A_JumpIfCloser(64, "Death")
			MRCR U 0 A_SpawnItemEx("Merc_GrabBusterChaseFX", 0, 0, 0, 0, 0, 0, 0, 1)
			MRCR U 0 A_FaceTracer(6, 3)
			MRCR U 1 A_ChangeVelocity(6, 0, sin(pitch) * 6, 3)
			MRCR V 0 A_FaceTracer(6, 3)
			MRCR V 1 A_ChangeVelocity(6, 0, sin(pitch) * 6, 3)
		goto SpawnSpeed
		SpawnSpeed:
			MRCR U 0 A_JumpIf(Args[3]>=16, "SpawnL")
			MRCR U 0 A_JumpIfCloser(64, "Death")
			MRCR U 0 A_JumpIf(ACS_ExecuteWithResult(C_CHECK_TARGET_OOC)==0, "No")
			MRCR U 0 A_SetArg(3, Args[3]+1)
			MRCR U 0 A_SpawnItemEx("Merc_GrabBusterChaseFX", 0, 0, 0, 0, 0, 0, 0, 1)
			MRCR U 0 A_FaceTracer(6, 3)
			MRCR U 1 A_ChangeVelocity(3 + 3 * Args[3], 0, sin(pitch) * (3 + 3 * Args[3]), 3)
			MRCR V 0 A_JumpIfCloser(64, "Death")
			MRCR V 0 A_FaceTracer(6, 3)
			MRCR V 1 A_ChangeVelocity(3 + 3 * Args[3], 0, sin(pitch) * (3 + 3 * Args[3]), 3)
		loop
		SpawnL:
			MRCR U 0 A_JumpIfCloser(64, "Death")
			MRCR U 0 A_JumpIf(ACS_ExecuteWithResult(C_CHECK_TARGET_OOC)==0, "No")
			MRCR U 0 A_CountDown
			//A_SeekerMissile(90, 90, 2)
			MRCR U 0 A_SpawnItemEx("Merc_GrabBusterChaseFX", 0, 0, 0, 0, 0, 0, 0, 1)
			MRCR U 0 A_FaceTracer(90, 90)
			MRCR U 1 A_ChangeVelocity(50, 0, sin(pitch) * 50, 3)
			MRCR V 0 A_JumpIfCloser(64, "Death")
			MRCR V 0 A_FaceTracer(90, 90)
			MRCR V 1 A_ChangeVelocity(50, 0, sin(pitch) * 50, 3)
		loop
		Death:
			TNT1 A 0 A_PlaySoundEx("item / JunkPick", "Weapon")
			TNT1 A 3 A_GiveToTarget("MercuryClassAmmo", 2)
		stop
		No:
		TNT1 A 0
		stop
	}
}

actor Merc_GrabBusterChaseFX : BasicClientside {
	renderstyle translucent
	alpha 0.8
	scale 1.5
	states {
		Spawn:
			MRCR UV 1 A_FadeOut(0.05)
		loop
	}
}

actor Merc_GrabBuster_L : Merc_GrabBuster {
	States {
		Spawn:
			TNT1 A 1
			MRCR AC 1
			MRCR A 0 A_ChangeFlag("BOUNCEONWALLS", 0)
			MRCR ABCD 3 A_ChangeVelocity(0, 8, 0, CVF_RELATIVE)
		Goto Spawn+3
	}
}

actor Merc_GrabBuster_R : Merc_GrabBuster {
	States {
		Spawn:
			TNT1 A 1
			MRCR AC 1
			MRCR A 0 A_ChangeFlag("BOUNCEONWALLS", 0)
			MRCR ABCD 3 A_ChangeVelocity(0, -8, 0, CVF_RELATIVE)
		Goto Spawn+3
	}
}

actor Merc_GrabBusterB : Merc_GrabBuster {
	translation "192 : 192=205 : 205", "198 : 198=74 : 74"
}

actor Merc_GrabBusterR : Merc_GrabBuster {
	translation "192 : 192=171 : 171", "198 : 198=41 : 41"
}

actor Merc_GrabBusterO : Merc_GrabBuster {
	translation "192 : 192=104 : 104", "198 : 198=128 : 128"
}

actor Merc_GrabBusterP : Merc_GrabBuster {
	translation "192 : 192=229 : 229", "198 : 198=232 : 232"
}

actor Merc_GrabBuster_LB : Merc_GrabBuster_L {
	translation "192 : 192=205 : 205", "198 : 198=74 : 74"
}

actor Merc_GrabBuster_LR : Merc_GrabBuster_L {
	translation "192 : 192=171 : 171", "198 : 198=41 : 41"
}

actor Merc_GrabBuster_LO : Merc_GrabBuster_L {
	translation "192 : 192=104 : 104", "198 : 198=128 : 128"
}

actor Merc_GrabBuster_LP : Merc_GrabBuster_L {
	translation "192 : 192=229 : 229", "198 : 198=232 : 232"
}

actor Merc_GrabBuster_RB : Merc_GrabBuster_R {
	translation "192 : 192=205 : 205", "198 : 198=74 : 74"
}

actor Merc_GrabBuster_RR : Merc_GrabBuster_R {
	translation "192 : 192=171 : 171", "198 : 198=41 : 41"
}

actor Merc_GrabBuster_RO : Merc_GrabBuster_R {
	translation "192 : 192=104 : 104", "198 : 198=128 : 128"
}

actor Merc_GrabBuster_RP : Merc_GrabBuster_R {
	translation "192 : 192=229 : 229", "198 : 198=232 : 232"
}

actor MercurySplashRadius : BasicExplosion {
	Translation "192 : 192=104 : 104", "198 : 198=110 : 110", "249 : 249=130 : 130"
	damagetype "ClassPain"
	Obituary "$OB_MERCURYSLAM"
	States {
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_Explode(36, 128, 0, 0, 24)
			TNT1 AAAAAAAA 0 A_SpawnItemEx("MercuryBlobSplashFX", 0, 0, -24, random(2, 8), 0, random(4, 12), random(0, 359), 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 0, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 30, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 60, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 90, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 120, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 150, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 180, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 210, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 240, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 270, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 300, 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlobWaveFX", 0, 0, -28, 5, 0, 0, 330, 1)
			TNT1 A 4
		stop
	}
}

actor MercurySplashRadiusB : MercurySplashRadius {
	Translation"192 : 192=205 : 205", "198 : 198=74 : 74", "249 : 249=199 : 199"
}

actor MercurySplashRadiusR : MercurySplashRadius {
	Translation"192 : 192=171 : 171", "198 : 198=41 : 41", "249 : 249=43 : 43"
}

actor MercurySplashRadiusO : MercurySplashRadius {
	Translation"192 : 192=104 : 104", "198 : 198=128 : 128", "249 : 249=131 : 131"
}

actor MercurySplashRadiusP : MercurySplashRadius {
	Translation"192 : 192=229 : 229", "198 : 198=232 : 232", "249 : 249=223 : 223"
}

actor MercuryBlobSplashRadius : MercurySplashRadius {
	Obituary "$OB_MERCURYBLOB"
	states {
		Spawn:
			TNT1 A 0
			TNT1 A 2 A_Explode(20, 128, 0, 0, 10)
			TNT1 AAAAAAAA 0 A_SpawnItemEx("MercuryBlobSplashFX", 0, 0, 4, random(2, 8), 0, random(4, 12), random(0, 359), 1)
			TNT1 A 2
		stop
	}
}

actor MercuryBlobSplashRadiusW : MercuryBlobSplashRadius {
	states {
		Spawn:
			TNT1 A 0
			TNT1 A 2 A_Explode(10, 128, 0, 0, 10)
			TNT1 AAAA 0 A_SpawnItemEx("MercuryBlobSplashFX", 0, 0, 4, random(2, 8), 0, random(4, 12), random(0, 359), 1)
			TNT1 A 2
		stop
	}
}

actor MercuryContactDamage : BasicExplosion {
	damagetype "ClassPain"
	Obituary "$OB_MERCURYSLAM"
	States {
		Spawn:
			TNT1 A 0
			TNT1 A 2 A_Explode(2, 96, 0, 0, 2)
		stop
	}
}

actor MercuryBlobSplashFX {
	+MISSILE
	-NOGRAVITY
	+DONTBLAST
	+THRUACTORS
	+DONTSPLASH
	+CLIENTSIDEONLY
	Damage (0)
	Height 2
	Radius 2
	Speed 5
	Scale 2.5
	States {
		Spawn:
			TNT1 A 1
			MRCR AC 2
		Goto Spawn+1
		Death:
			MRCR A 0 A_SetScale(scaleX-0.15)
			MRCR A 1 A_FadeOut(0.1)
			MRCR C 0 A_SetScale(scaleX-0.15)
			MRCR C 1 A_FadeOut(0.1)
		loop
	}
}

actor MercuryBlobWaveFX : MercuryBlobSplashFX {
	+NOGRAVITY
	renderstyle translucent
	alpha 0.7
	Speed 15
	Scale 1.5
	States {
		Spawn:
			DUOR T 0
			DUOR TTTTTTTTTTTT 1 A_SetScale(1.5, scaleY-0.08)
			DUOR T 1 A_FadeOut(0.5)
		wait
		Death:
			TNT1 A 0
		stop
	}
}

actor MercuryBlob1 {
	Translation "192 : 192=104 : 104", "198 : 198=110 : 110", "249 : 249=130 : 130"
	PROJECTILE
	damagetype "ClassPain"
	Obituary "$OB_MERCURYBLOB"
	+NOEXPLODEFLOOR
	-NOGRAVITY
	+DONTREFLECT
	+NOTARGETSWITCH
	+THRUSPECIES
	Bouncetype Classic
	-BOUNCEONWALLS
	-BOUNCEONFLOORS
	-BOUNCEONCEILINGS
	-ALLOWBOUNCEONACTORS
	+CANBOUNCEWATER
	+NOEXPLODEFLOOR
	BounceFactor 1.0
	WallBounceFactor 1.0
	bouncecount 5
	reactiontime 37
	species "Mercury"
	Damage (10)
	radius 13
	height 13
	speed 1
	scale 2.5
	States {
		Spawn:
			TNT1 A 0
			MRCR EFGF 2
			MRCR E 0 A_CheckFloor("Spawn2")
			Fall:
			MRCR EFGF 1 A_CheckFloor("Landing")
		loop
		Landing:
			MRCR E 0 //A_GiveInventory("ResyncPickup", 1)
			MRCR E 0 A_PlaySoundEx("classes / burstpop", "Weapon")
			MRCR E 0 A_SpawnItemEx("MercurySplashRadius", 0, 0, 28, 0, 0, 0, 0, 1)
			MRCR EF 1
		goto Spawn2
		Spawn2:
			MRCR E 0 //A_GiveInventory("ResyncPickup", 1)
			MRCR EEE 1 A_JumpIfCloser(56, "Give")
			MRCR F 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "Home")
			MRCR FFF 1 A_JumpIfCloser(56, "Give")
			MRCR G 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "Home")
			MRCR GGG 1 A_JumpIfCloser(56, "Give")
			MRCR F 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "Home")
			MRCR FFF 1 A_JumpIfCloser(56, "Give")
			MRCR E 0 A_JumpIf(ACS_ExecuteWithResult(C_CHECK_TARGET_OOC)==0, "DeathOOC")
			MRCR E 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "Home")
		goto Spawn2 + 1
		Give:
			TNT1 A 0 A_ChangeFlag("NOINTERACTION", 1)
			TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE", 0)
			TNT1 A 0 A_PlaySoundEx("item / JunkPick", "Body")
			TNT1 A 1 A_GiveToTarget("MercuryClassAmmo", 4)
		stop
		Home:
			MRCR E 0 A_ChangeFlag("FLOORHUGGER", 1)
			MRCR E 0 A_ChangeFlag("BOUNCEONWALLS", 1)
			MRCR E 0 A_FaceTarget
			MRCR E 0 A_ChangeVelocity(44, 0, 0, 3)
			MRCR EEE 1 A_JumpIfCloser(56, "Give")
			MRCR E 0 A_CountDown
			MRCR E 0 A_FaceTarget
			MRCR F 0 A_ChangeVelocity(44, 0, 0, 3)
			MRCR FFF 1 A_JumpIfCloser(56, "Give")
			MRCR E 0 A_CountDown
			MRCR E 0 A_FaceTarget
			MRCR G 0 A_ChangeVelocity(44, 0, 0, 3)
			MRCR GGG 1 A_JumpIfCloser(56, "Give")
			MRCR E 0 A_CountDown
			MRCR E 0 A_FaceTarget
			MRCR F 0 A_ChangeVelocity(44, 0, 0, 3)
			MRCR FFF 1 A_JumpIfCloser(56, "Give")
			MRCR E 0 A_CountDown
			MRCR E 0 A_JumpIf(ACS_ExecuteWithResult(C_CHECK_TARGET_OOC)==0, "DeathOOC")
		goto Home+2
		DeathOOC:
			TNT1 A 1 A_CountdownArg(0)
		wait
		Death:
			TNT1 A 0 A_PlaySoundEx("classes / burstpop", "Weapon")
			TNT1 AAAAAAAA 0 A_SpawnItemEx("MercuryBlobSplashFX", 0, 0, 4, random(2, 8), 0, random(4, 12), random(0, 359), 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlob1ReturnHit", 0, 0, 0, 0, 0, 0, 0, 1)
			TMFX ABCD 4
		stop
	}
}

actor MercuryBlob1Return : MercuryBlob1 {
	States {
		Spawn:
			MRCR E 0
		goto Home
	}
}

actor MercuryBlob1ReturnHit : MercuryBlob1 {
	+THRUACTORS
	+DONTBLAST
	RenderStyle Translucent
	Alpha 0.75
	States {
		Spawn:
			MRCR E 0
		goto Home
		Give:
			TNT1 A 0 A_ChangeFlag("NOINTERACTION", 1)
			TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE", 0)
			TNT1 A 0 A_PlaySoundEx("item / JunkPick", "Body")
			TNT1 A 1 A_GiveToTarget("MercuryClassAmmo", 4)
		stop
		Death:
			TNT1 A 0 A_PlaySoundEx("classes / burstpop", "Weapon")
			TNT1 AAAAAAAA 0 A_SpawnItemEx("MercuryBlobSplashFX", 0, 0, 4, random(2, 8), 0, random(4, 12), random(0, 359), 1)
			TMFX ABCD 4
		stop
	}
}

actor MercuryBlob2 {
	Translation "192 : 192=104 : 104", "198 : 198=110 : 110", "249 : 249=130 : 130"
	PROJECTILE
	damagetype "ClassPain"
	Obituary "$OB_MERCURYBLOB"
	BounceSound "weapon / BubbleBounce"
	-NOEXPLODEFLOOR
	-NOGRAVITY
	+DONTREFLECT
	+NOTARGETSWITCH
	+THRUSPECIES
	+BOUNCEONWALLS
	+BOUNCEONFLOORS
	+BOUNCEONCEILINGS
	+CANBOUNCEWATER
	+USEBOUNCESTATE
	species "Mercury"
	bouncecount 5
	reactiontime 50
	Damage (10)
	radius 13
	height 13
	speed 38
	scale 2.5
	States {
		Spawn:
			MRCR EEE 1
			MRCR F 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "SpawnR")
			MRCR FFF 1
			MRCR G 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "SpawnR")
			MRCR GGG 1
			MRCR F 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "SpawnR")
			MRCR FFF 1
			MRCR E 0 A_JumpIf(ACS_ExecuteWithResult(C_CHECK_TARGET_OOC)==0, "DeathOOC")
			MRCR E 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "SpawnR")
			MRCR E 0 A_CountDown
		loop
		SpawnGive:
			MRCR EEE 1 A_JumpIfCloser(56, "Give")
			MRCR F 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "SpawnR")
			MRCR FFF 1 A_JumpIfCloser(56, "Give")
			MRCR G 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "SpawnR")
			MRCR GGG 1 A_JumpIfCloser(56, "Give")
			MRCR F 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "SpawnR")
			MRCR FFF 1 A_JumpIfCloser(56, "Give")
			MRCR E 0 A_JumpIf(ACS_ExecuteWithResult(C_CHECK_TARGET_OOC)==0, "DeathOOC")
			MRCR E 0 A_JumpIfInTargetInventory("Merc_BlobOff_F", 1, "SpawnR")
			MRCR E 0 A_CountDown
		loop
		Bounce:
			MRCR E 0 A_PlaySoundEx("classes / burstpop", "Weapon")
			MRCR E 0 A_JumpIfInventory("VivifyDelay8", 1, "WeakBounce")
			MRCR E 0 A_GiveInventory("VivifyDelay8", 1)
			MRCR E 0 A_SpawnItemEx("MercuryBlobSplashRadius", 0, 0, 8, 0, 0, 0, 0, 1)
		Goto SpawnGive
		WeakBounce:
			MRCR E 0 A_SpawnItemEx("MercuryBlobSplashRadiusW", 0, 0, 8, 0, 0, 0, 0, 1)
		Goto SpawnGive
		SpawnR:
			MRCR E 0 A_SpawnItemEx("MercuryBlob1Return", 0, 0, 0, 0, 0, 0, 0, 1)
		stop
		Give:
			TNT1 A 0 A_ChangeFlag("NOINTERACTION", 1)
			TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE", 0)
			TNT1 A 0 A_PlaySoundEx("item / JunkPick", "Body")
			TNT1 A 1 A_GiveToTarget("MercuryClassAmmo", 4)
		stop
		DeathOOC:
			TNT1 A 1 A_CountdownArg(0, "XDeath")
		wait
		Crash:
		XDeath:
			TNT1 A 0 A_PlaySoundEx("classes / burstpop", "Weapon")
			TNT1 AAAAAAAA 0 A_SpawnItemEx("MercuryBlobSplashFX", 0, 0, 4, random(2, 8), 0, random(4, 12), random(0, 359), 1)
			TNT1 A 0 A_SpawnItemEx("MercuryBlob1ReturnHit", 0, 0, 0, 0, 0, 0, 0, 1)
			TMFX ABCD 4
		stop
		Death:
			TNT1 A 0 A_SpawnItemEx("MercuryBlob1", 0, 0, 0, 0, 0, 0, 0, 1)
		stop
	}
}

actor MercuryBlob2B : MercuryBlob2 {
	Translation"192 : 192=205 : 205", "198 : 198=74 : 74", "249 : 249=199 : 199"
}

actor MercuryBlob2R : MercuryBlob2 {
	Translation"192 : 192=171 : 171", "198 : 198=41 : 41", "249 : 249=43 : 43"
}

actor MercuryBlob2O : MercuryBlob2 {
	Translation"192 : 192=104 : 104", "198 : 198=128 : 128", "249 : 249=131 : 131"
}

actor MercuryBlob2P : MercuryBlob2 {
	Translation"192 : 192=229 : 229", "198 : 198=232 : 232", "249 : 249=223 : 223"
}

actor MercuryMain_CI : TeamColor_CI {
	states {
		FireX:
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster_L", -18, 0, 8, 0)
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster", 0, 0, 8, 0)
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster_R", 18, 0, 8, 0)
		goto Done
		FireB:
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster_LB", -18, 0, 8, 0)
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBusterB", 0, 0, 8, 0)
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster_RB", 18, 0, 8, 0)
		goto Done
		FireR:
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster_LR", -18, 0, 8, 0)
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBusterR", 0, 0, 8, 0)
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster_RR", 18, 0, 8, 0)
		goto Done
		FireO:
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster_LO", -18, 0, 8, 0)
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBusterO", 0, 0, 8, 0)
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster_RO", 18, 0, 8, 0)
		goto Done
		FireP:
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster_LP", -18, 0, 8, 0)
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBusterP", 0, 0, 8, 0)
			TNT1 A 0 A_FireCustomMissile("Merc_GrabBuster_RP", 18, 0, 8, 0)
		goto Done
	}
}

actor MercuryMain2_CI : TeamColor_CI {
	states {
		FireX:
			TNT1 A 0 A_FireCustomMissile("MercuryBlob2", 0, 0, 0, 0)
		goto Done
		FireB:
			TNT1 A 0 A_FireCustomMissile("MercuryBlob2B", 0, 0, 0, 0)
		goto Done
		FireR:
			TNT1 A 0 A_FireCustomMissile("MercuryBlob2R", 0, 0, 0, 0)
		goto Done
		FireO:
			TNT1 A 0 A_FireCustomMissile("MercuryBlob2O", 0, 0, 0, 0)
		goto Done
		FireP:
			TNT1 A 0 A_FireCustomMissile("MercuryBlob2P", 0, 0, 0, 0)
		goto Done
	}
}

actor MercuryAlt_CI : TeamColor_CI {
	states {
		FireX:
			TNT1 A 0 A_FireCustomMissile("MercurySplashRadius", 0, 0, 0, 0)
		goto Done
		FireB:
			TNT1 A 0 A_FireCustomMissile("MercurySplashRadiusB", 0, 0, 0, 0)
		goto Done
		FireR:
			TNT1 A 0 A_FireCustomMissile("MercurySplashRadiusR", 0, 0, 0, 0)
		goto Done
		FireO:
			TNT1 A 0 A_FireCustomMissile("MercurySplashRadiusO", 0, 0, 0, 0)
		goto Done
		FireP:
			TNT1 A 0 A_FireCustomMissile("MercurySplashRadiusP", 0, 0, 0, 0)
		goto Done
	}
}

